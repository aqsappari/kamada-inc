<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Track Your Order</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      rel="stylesheet"
    />
  </head>
  <body
    class="bg-gray-100 p-4 lg:h-screen lg:flex lg:items-center lg:justify-center"
  >
    <div
      class="bg-white rounded-lg shadow-md max-w-4xl mx-auto w-full lg:max-w-[1000px] lg:min-w-[1000px]"
    >
      <div class="flex flex-col">
        <div class="w-full flex justify-center border">
          <ol
            class="flex flex-col md:flex-row md:justify-center md:items-center md:w-full w-fit gap-4 p-6"
          >
            <li
              class="flex items-center text-blue-600 dark:text-blue-500 gap-4"
              id="step-1"
            >
              <span
                class="flex items-center justify-center w-8 h-8 border border-blue-600 rounded-full shrink-0 dark:border-blue-500"
              >
                1
              </span>
              <span>
                <h3 class="font-medium leading-tight">
                  Order Placement & Initial Processing
                </h3>
                <p class="text-sm">
                  Your order has been received and is being processed.
                </p>
              </span>
            </li>
            <li
              class="flex items-center text-gray-500 dark:text-gray-400 gap-4"
              id="step-2"
            >
              <span
                class="flex items-center justify-center w-8 h-8 border border-gray-500 rounded-full shrink-0 dark:border-gray-400"
              >
                2
              </span>
              <span>
                <h3 class="font-medium leading-tight">Production & Printing</h3>
                <p class="text-sm">
                  Your order is now in the production and printing phase.
                </p>
              </span>
            </li>
            <li
              class="flex items-center text-gray-500 dark:text-gray-400 gap-4"
              id="step-3"
            >
              <span
                class="flex items-center justify-center w-8 h-8 border border-gray-500 rounded-full shrink-0 dark:border-gray-400"
              >
                3
              </span>
              <span>
                <h3 class="font-medium leading-tight">Shipping & Delivery</h3>
                <p class="text-sm">
                  Your order is being prepared for shipping or delivery.
                </p>
              </span>
            </li>
          </ol>
        </div>

        <div class="lg:flex">
          <div class="w-full p-6 lg:w-1/2">
            <div>
              <h2 class="font-semibold text-gray-500">
                Tracking ID: <br />
                <span id="tracking-id" class="text-black text-xl"></span>
              </h2>
              <div class="flex justify-between">
                <p class="">
                  <span class="text-sm font-medium">Product Name:</span>
                  <span id="product-name"></span>
                </p>
                <p class="text-sm mb-2">
                  <span class="font-medium text-gray-500">Product ID:</span>
                  <span id="product-id" class="text-gray-500"></span>
                </p>
              </div>
              <div class="flex justify-between">
                <p class="mb-2">
                  <strong>Quantity:</strong> <span id="quantity"></span>
                </p>
                <p class="mb-2">
                  <strong>Price:</strong> <span id="price"></span>
                </p>
              </div>
              <p class="mt-4"><strong>Design Notes:</strong></p>
              <div
                id="design-notes"
                class="border w-full max-h-[300px] min-h-[300px] rounded p-2 overflow-y-auto"
              ></div>

              <div id="timeline-mobile-container" class="lg:hidden mt-4">
                <ol
                  id="timeline-mobile"
                  class="relative text-gray-500 border-s border-gray-200 dark:border-gray-700 dark:text-gray-400"
                ></ol>
              </div>
            </div>
            <div class="flex justify-between items-center mt-6">
              <button
                id="payment-button"
                class="bg-gray-400 text-white font-bold py-2 px-4 rounded disabled:opacity-50"
                disabled
                data-state="disabled"
              >
                Pay Now
              </button>
              <p class="text-lg font-semibold">
                Total: <span id="total-price"></span> PHP
              </p>
            </div>
          </div>

          <div
            id="timeline-desktop-container"
            class="w-full p-6 lg:w-1/2 hidden lg:flex lg:items-center lg:justify-center"
          >
            <ol
              id="timeline-desktop"
              class="relative text-gray-500 border-s border-gray-200 dark:border-gray-700 dark:text-gray-400"
            ></ol>
          </div>
        </div>

        <div class="p-4 flex flex-col lg:flex-row hidden">
          <div class="mb-4 lg:mb-0 lg:mr-4">
            <label
              for="detailed-stepper-select"
              class="block text-sm font-medium text-gray-700"
              >Detailed Stepper Step:</label
            >
            <select
              id="detailed-stepper-select"
              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
            >
              <option value="1">Order Placement & Initial Processing</option>
              <option value="2">Production & Printing</option>
              <option value="3">Shipping & Delivery</option>
            </select>
          </div>
          <div>
            <label
              for="timeline-stepper-select"
              class="block text-sm font-medium text-gray-700"
              >Timeline Stepper Step:</label
            >
            <select
              id="timeline-stepper-select"
              class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
            >
              <option value="0">Order Received</option>
              <option value="1">Design Proofing/Review</option>
              <option value="2">Design Approved</option>
              <option value="3">Payment Confirmed</option>
              <option value="4">In Production</option>
              <option value="5">Printing Completed</option>
              <option value="6">Finishing/Binding</option>
              <option value="7">Quality Check</option>
              <option value="8">Ready for Pickup/Shipping</option>
              <option value="9">Shipped</option>
              <option value="10">Out for Delivery</option>
              <option value="11">Delivered</option>
            </select>
          </div>
        </div>
      </div>

      <div class="flex justify-center">
        <a href="/" class="text-slate-500 hover:underline mb-4">Back to Home</a>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const urlParams = new URLSearchParams(window.location.search);
        const trackingId = urlParams.get("id");
        if (trackingId) {
          fetchOrderDetails(trackingId);
        } else {
          alert("Tracking ID is required.");
        }

        const detailedStepperSelect = document.getElementById(
          "detailed-stepper-select"
        );
        const timelineStepperSelect = document.getElementById(
          "timeline-stepper-select"
        );

        detailedStepperSelect.addEventListener("change", () => {
          updateDetailedStepper(detailedStepperSelect.value);
          updateTimelineStepper(
            parseInt(timelineStepperSelect.value),
            detailedStepperSelect.value
          );
        });

        timelineStepperSelect.addEventListener("change", () => {
          updateTimelineStepper(
            parseInt(timelineStepperSelect.value),
            detailedStepperSelect.value
          );
        });
      });

      async function fetchOrderDetails(trackingId) {
        try {
          const response = await fetch(`/track-order/data?id=${trackingId}`);
          if (!response.ok) {
            throw new Error("Failed to fetch order details.");
          }
          const orderData = await response.json();
          displayOrderDetails(orderData);
        } catch (error) {
          alert(error.message);
        }
      }

      function displayOrderDetails(orderData) {
        document.getElementById("tracking-id").textContent =
          orderData.trackingId;
        document.getElementById("product-name").textContent =
          orderData.productArray.name && orderData.productArray.name.length > 15
            ? orderData.productArray.name.substring(0, 15) + "..."
            : orderData.productArray.name || "N/A";
        document.getElementById("product-id").textContent =
          orderData.productArray.id || "N/A";
        document.getElementById("quantity").textContent =
          orderData.productArray.productOrder || "N/A";
        document.getElementById("price").textContent =
          orderData.totalAmount / orderData.productArray.productOrder +
            " PHP" || "0";
        document.getElementById("design-notes").textContent =
          orderData.designNotes || "N/A";
        document.getElementById("total-price").textContent =
          orderData.totalAmount || "0";

        // Update the steppers based on orderData.status
        updateSteppersFromStatus(orderData.status);
      }

      function updateSteppersFromStatus(status) {
        const detailedStepperSelect = document.getElementById(
          "detailed-stepper-select"
        );
        const timelineStepperSelect = document.getElementById(
          "timeline-stepper-select"
        );

        // Map status to timeline stepper value
        const statusMap = {
          "Order Received": 0,
          "Design Proofing/Review": 1,
          "Design Approved": 2,
          "Payment Confirmed": 3,
          "In Production": 4,
          "Printing Completed": 5,
          "Finishing/Binding": 6,
          "Quality Check": 7,
          "Ready for Pickup/Shipping": 8,
          Shipped: 9, // Corrected: added quotes
          "Out for Delivery": 10,
          Delivered: 11, // Corrected: added quotes
        };

        console.log(status == "Order Received");
        console.log("Order Received");
        console.log(status);
        let statusString = status.trim();
        const timelineValue = statusMap[statusString];

        // Update the timeline stepper
        timelineStepperSelect.value = timelineValue;

        // Determine the detailed stepper based on timeline value
        let detailedValue;
        if (timelineValue <= 3) {
          detailedValue = "1"; // Order Placement & Initial Processing
        } else if (timelineValue <= 7) {
          detailedValue = "2"; // Production & Printing
        } else {
          detailedValue = "3"; // Shipping & Delivery
        }

        // Update the detailed stepper
        detailedStepperSelect.value = detailedValue;

        // Update the UI
        updateDetailedStepper(detailedValue);
        updateTimelineStepper(timelineValue, detailedValue);

        // Update the Pay Now button state
        updatePaymentButtonState(status);
      }

      function updatePaymentButtonState(status) {
        const paymentButton = document.getElementById("payment-button");

        if (status === "Design Approved") {
          paymentButton.textContent = "Pay Now";
          paymentButton.classList.remove("bg-gray-400");
          paymentButton.classList.add("bg-blue-500", "hover:bg-blue-700");
          paymentButton.disabled = false;
          paymentButton.dataset.state = "enabled";
        } else if (
          status === "Payment Confirmed" ||
          status === "In Production" ||
          status === "Printing Completed" ||
          status === "Finishing/Binding" ||
          status === "Quality Check" ||
          status === "Ready for Pickup/Shipping" ||
          status === "Shipped" ||
          status === "Out for Delivery" ||
          status === "Delivered"
        ) {
          paymentButton.textContent = "PAID";
          paymentButton.classList.remove("bg-blue-500", "hover:bg-blue-700");
          paymentButton.classList.add("bg-green-500");
          paymentButton.disabled = true;
          paymentButton.dataset.state = "paid";
        } else {
          paymentButton.textContent = "Pay Now";
          paymentButton.classList.remove(
            "bg-blue-500",
            "hover:bg-blue-700",
            "bg-green-500"
          );
          paymentButton.classList.add("bg-gray-400");
          paymentButton.disabled = true;
          paymentButton.dataset.state = "disabled";
        }
      }

      function getMilestones(detailedStep) {
        switch (detailedStep) {
          case "1": // Order Placement & Initial Processing
            return [
              {
                title: "Order Received",
                icon: `<svg class="w-3.5 h-3.5 text-green-500 dark:text-green-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5.917 5.724 10.5 15 1.5"/></svg>`,
                color: "green-200",
                description:
                  "Your order has been successfully received and is being processed.",
              },
              {
                title: "Design Proofing/Review",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 16"><path d="M18 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2ZM6.5 3a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5ZM3.014 13.021l.157-.625A3.427 3.427 0 0 1 6.5 9.571a3.426 3.426 0 0 1 3.322 2.805l.159.622-6.967.023ZM16 12h-3a1 1 0 0 1 0-2h3a1 1 0 0 1 0 2Zm0-3h-3a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2Zm0-3h-3a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2Z"/></svg>`,
                color: "gray-100",
                description:
                  "We are reviewing your design and will send you a proof for approval.",
              },
              {
                title: "Design Approved",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20"><path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm7 9.481a1 1 0 0 1 .439 1.779l-4.162 4a1 1 0 0 1-1.447.025L6 11.856a.996.996 0 0 1 1.332-1.501l2.67 2.574 3.764-3.635a1 1 0 0 1 1.4-.372Z"/></svg>`,
                color: "gray-100",
                description:
                  "Your design has been approved and is ready for production.",
              },
              {
                title: "Payment Confirmed",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 16"><path d="M18 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2ZM6.5 3a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5ZM3.014 13.021l.157-.625A3.427 3.427 0 0 1 6.5 9.571a3.426 3.426 0 0 1 3.322 2.805l.159.622-6.967.023ZM16 12h-3a1 1 0 0 1 0-2h3a1 1 0 0 1 0 2Zm0-3h-3a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2Zm0-3h-3a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2Z"/></svg>`,
                color: "gray-100",
                description:
                  "Your payment has been confirmed. We are now preparing your order for production.",
              },
            ];
          case "2": // Production & Printing
            return [
              {
                title: "In Production",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20"><path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm7 9.481a1 1 0 0 1 .439 1.779l-4.162 4a1 1 0 0 1-1.447.025L6 11.856a.996.996 0 0 1 1.332-1.501l2.67 2.574 3.764-3.635a1 1 0 0 1 1.4-.372Z"/></svg>`,
                color: "gray-100",
                description: "Your order is now in the production phase.",
              },
              {
                title: "Printing Completed",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20"><path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm7 9.481a1 1 0 0 1 .439 1.779l-4.162 4a1 1 0 0 1-1.447.025L6 11.856a.996.996 0 0 1 1.332-1.501l2.67 2.574 3.764-3.635a1 1 0 0 1 1.4-.372Z"/></svg>`,
                color: "gray-100",
                description:
                  "Printing is complete. Your order is moving to the next stage.",
              },
              {
                title: "Finishing/Binding",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20"><path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm7 9.481a1 1 0 0 1 .439 1.779l-4.162 4a1 1 0 0 1-1.447.025L6 11.856a.996.996 0 0 1 1.332-1.501l2.67 2.574 3.764-3.635a1 1 0 0 1 1.4-.372Z"/></svg>`,
                color: "gray-100",
                description: "Your order is being finished and bound.",
              },
              {
                title: "Quality Check",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20"><path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm7 9.481a1 1 0 0 1 .439 1.779l-4.162 4a1 1 0 0 1-1.447.025L6 11.856a.996.996 0 0 1 1.332-1.501l2.67 2.574 3.764-3.635a1 1 0 0 1 1.4-.372Z"/></svg>`,
                color: "gray-100",
                description: "Your order is undergoing a final quality check.",
              },
            ];
          case "3": // Shipping & Delivery
            return [
              {
                title: "Ready for Pickup/Shipping",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 16"><path d="M18 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2ZM6.5 3a2.5 2.5 0 1 1 0 5 2.5 2.5 0 0 1 0-5ZM3.014 13.021l.157-.625A3.427 3.427 0 0 1 6.5 9.571a3.426 3.426 0 0 1 3.322 2.805l.159.622-6.967.023ZM16 12h-3a1 1 0 0 1 0-2h3a1 1 0 0 1 0 2Zm0-3h-3a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2Zm0-3h-3a1 1 0 1 1 0-2h3a1 1 0 1 1 0 2Z"/></svg>`,
                color: "gray-100",
                description: "Your order is ready for pickup or shipping.",
              },
              {
                title: "Shipped",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20"><path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm7 9.481a1 1 0 0 1 .439 1.779l-4.162 4a1 1 0 0 1-1.447.025L6 11.856a.996.996 0 0 1 1.332-1.501l2.67 2.574 3.764-3.635a1 1 0 0 1 1.4-.372Z"/></svg>`,
                color: "gray-100",
                description: "Your order has been shipped.",
              },
              {
                title: "Out for Delivery",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20"><path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2.0 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm7 9.481a1 1 0 0 1 .439 1.779l-4.162 4a1 1 0 0 1-1.447.025L6 11.856a.996.996 0 0 1 1.332-1.501l2.67 2.574 3.764-3.635a1 1 0 0 1 1.4-.372Z"/></svg>`,
                color: "gray-100",
                description: "Your order is out for delivery.",
              },
              {
                title: "Delivered",
                icon: `<svg class="w-3.5 h-3.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20"><path d="M16 1h-3.278A1.992 1.992 0 0 0 11 0H7a1.993 1.993 0 0 0-1.722 1H2a2 2 0 0 0-2 2v15a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2Zm7 9.481a1 1 0 0 1 .439 1.779l-4.162 4a1 1 0 0 1-1.447.025L6 11.856a.996.996 0 0 1 1.332-1.501l2.67 2.574 3.764-3.635a1 1 0 0 1 1.4-.372Z"/></svg>`,
                color: "gray-100",
                description: "Your order has been successfully delivered.",
              },
            ];
          default:
            return [];
        }
      }

      function updateDetailedStepper(step) {
        document
          .getElementById("step-1")
          .classList.remove("text-blue-600", "dark:text-blue-500");
        document
          .getElementById("step-2")
          .classList.remove("text-blue-600", "dark:text-blue-500");
        document
          .getElementById("step-3")
          .classList.remove("text-blue-600", "dark:text-blue-500");
        document
          .getElementById(`step-${step}`)
          .classList.add("text-blue-600", "dark:text-blue-500");
      }

      function updateTimelineStepper(step, detailedStep) {
        const desktopTimeline = document.getElementById("timeline-desktop");
        const mobileTimeline = document.getElementById("timeline-mobile");

        const milestones = getMilestones(detailedStep);

        desktopTimeline.innerHTML = "";
        mobileTimeline.innerHTML = "";

        milestones.forEach((milestone, index) => {
          const item = `<li class="mb-10 ms-6"><span class="absolute flex items-center justify-center w-8 h-8 ${milestone.color} rounded-full -start-4 ring-4 ring-white dark:ring-gray-900 dark:bg-gray-700">${milestone.icon}</span><h3 class="font-medium leading-tight">${milestone.title}</h3><p class="text-sm">${milestone.description}</p></li>`;
          desktopTimeline.innerHTML += item;
          mobileTimeline.innerHTML += item;
        });

        const listItemsDesktop = desktopTimeline.querySelectorAll("li");
        const listItemsMobile = mobileTimeline.querySelectorAll("li");

        listItemsDesktop.forEach((item, index) => {
          const span = item.querySelector("span");
          if (index <= step) {
            span.classList.remove("bg-gray-100", "dark:bg-gray-700");
            span.classList.add("bg-green-200", "dark:bg-green-900");
          } else {
            span.classList.remove("bg-green-200", "dark:bg-green-900");
            span.classList.add("bg-gray-100", "dark:bg-gray-700");
          }
        });

        listItemsMobile.forEach((item, index) => {
          const span = item.querySelector("span");
          if (index <= step) {
            span.classList.remove("bg-gray-100", "dark:bg-gray-700");
            span.classList.add("bg-green-200", "dark:bg-green-900");
          } else {
            span.classList.remove("bg-green-200", "dark:bg-green-900");
            span.classList.add("bg-gray-100", "dark:bg-gray-700");
          }
        });
      }
    </script>
  </body>
</html>
